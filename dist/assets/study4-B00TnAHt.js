import{a as T,M as v,S as w}from"./StudyContent-BPr2YxYz.js";import{c as _}from"./codeItem-Cy0TIWKK.js";import{M as k}from"./MyTitle-Ch0XEo59.js";import{_ as b,a as C}from"./demoCode-mrgE22yQ.js";import{_ as x,f as s,o as M,c as S,w as n,a as e,b as o,t as I,d as a}from"./index-DMEq0VNs.js";const D={components:{"my-title":k,"my-footer":T,"my-container":v,"study-content":w,"code-item":_,"my-demo":b,"demo-code":C},data(){return{startTime:null,result:"",isGreen:!1}},methods:{drawCanvas(i){const t=document.getElementById("reactionCanvas"),r=t.getContext("2d");r.fillStyle=i,r.fillRect(0,0,t.width,t.height)},startTest(){this.result="";const i=Math.floor(Math.random()*2e3)+1e3;setTimeout(()=>{this.drawCanvas("green"),this.startTime=new Date().getTime(),this.isGreen=!0},i),document.getElementById("reactionCanvas").addEventListener("click",this.handleClick)},handleClick(){if(this.isGreen){const t=(new Date().getTime()-this.startTime)/1e3;this.result="Your reaction time: "+t+" seconds",this.drawCanvas("#f0f0f0"),this.isGreen=!1}}},mounted(){this.drawCanvas("#f0f0f0")}},B={style:{"margin-top":"20px"}};function q(i,t,r,G,d,l){const u=s("my-title"),m=s("code-item"),c=s("demo-code"),f=s("my-demo"),p=s("my-footer"),y=s("study-content"),g=s("my-container");return M(),S(g,null,{default:n(()=>[e("header",null,[o(u,{title1:"Reaction Time Test"}),t[1]||(t[1]=e("h1",null,null,-1)),t[2]||(t[2]=e("p",null," In this task, you will test your reaction time. When the canvas turns green, click as quickly as possible to measure your reaction time. ",-1)),t[3]||(t[3]=e("p",null,"The Start button begins the test. Wait for the canvas to turn green, then click as quickly as you can.",-1)),t[4]||(t[4]=e("p",null,"Pros in various games are about 0.2 seconds long, try and see if you can beat them!",-1))]),e("main",B,[t[5]||(t[5]=e("canvas",{id:"reactionCanvas",width:"400",height:"400"},null,-1)),e("button",{onClick:t[0]||(t[0]=(...h)=>l.startTest&&l.startTest(...h))},"Start Test"),e("p",null,I(d.result),1)]),e("footer",null,[o(y,null,{default:n(()=>[o(m,null,{code:n(()=>t[6]||(t[6]=[a("setTimeout(function, delay)")])),item:n(()=>t[7]||(t[7]=[a(" We use this function to set a delay before the canvas changes color, simulating a random wait time before you need to react. ")])),_:1}),o(m,null,{code:n(()=>t[8]||(t[8]=[a("requestAnimationFrame(function)")])),item:n(()=>t[9]||(t[9]=[a(" This function is used to continuously update the canvas or check for user interaction, providing smooth animation or immediate response handling. ")])),_:1}),o(m,null,{code:n(()=>t[10]||(t[10]=[a("Math.random() and Math.floor()")])),item:n(()=>t[11]||(t[11]=[a(" Math.random() is a function in JavaScript for generating pseudo-random numbers. It returns a pseudo-random floating-point number between 0 (including 0) and 1 (excluding 1). math.floor() is a function in JavaScript used to round numbers down. It returns the largest integer less than or equal to the given value. In terms of generating random numbers, the two functions work in conjunction with each other for generating random integers in various ranges, randomly selecting elements in arrays, simulating random events, and so on. Understanding and applying these two functions is the key to mastering JavaScript's numeric manipulation and randomness control. ")])),_:1}),o(f,null,{code:n(()=>[o(c,{type:"JavaScript",code:`\r
let startTime = new Date().getTime();\r
console.log(startTime);  // Output example: 163821231425\r
let startTime = new Date().getTime();\r
// perform certain operations\r
let endTime = new Date().getTime();\r
let duration = endTime - startTime;\r
console.log('The operation took ' + duration + ' milliseconds.');\r
\r
              `})]),_:1}),t[12]||(t[12]=e("p",null," The test is simple: wait for the canvas to turn green, then click as fast as you can. Your reaction time will be displayed in seconds. ",-1)),o(p,{week:"1",num:"4"})]),_:1})])]),_:1})}const $=x(D,[["render",q],["__scopeId","data-v-ead9da20"]]);export{$ as default};
